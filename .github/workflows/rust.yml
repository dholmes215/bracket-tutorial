name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-gnu, wasm32-unknown-unknown]

    steps:
    - uses: actions/checkout@v4
    - name: Install rust target
      run: rustup target add ${{matrix.target}}
    - name: Build
      run: cargo build --verbose --release --target ${{matrix.target}}
    - name: Run tests
      run: cargo test --verbose
    - name: Run wasm-bindgen
      if: ${{ matrix.target == 'wasm32-unknown-unknown' }}
      run: |
        cargo install wasm-bindgen-cli
        wasm-bindgen ./target/wasm32-unknown-unknown/release/hello-bracket.wasm --out-dir ${{github.workspace}}/wasm --no-modules --no-typescript
    - name: Setup Pages
      if: ${{ matrix.target == 'wasm32-unknown-unknown' }}
      uses: actions/configure-pages@v4
    - name: Upload WASM package artifact
      if: ${{ matrix.target == 'wasm32-unknown-unknown' }}
      uses: actions/upload-pages-artifact@v3
      with:
        name: github-pages
        path: ${{github.workspace}}/wasm

  # Deploy WASM page
  deploy:
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4